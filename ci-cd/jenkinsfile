pipeline {
  agent {
    kubernetes {
      cloud 'kubernetes'
    }
  }

  parameters {
    string(name: 'container_name', defaultValue: 'deploy-test-container', description: 'Container name')
    string(name: 'image_name', defaultValue: 'deploy-test', description: 'Image name')
    string(name: 'image_tag', defaultValue: 'latest', description: 'Image tag')
    string(name: 'container_port', defaultValue: '80', description: 'Container port')
  }

  stages {
    stage('evironment') {
      steps {
        container('jnlp'){
          git branch: 'main', url: 'https://github.com/dvLef/deploy-test'
          sh 'apt-get update'
          sh 'apt-get install php curl php-curl php-xml zip unzip php-zip -y'
          sh 'php -v'
          sh 'curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer'
          sh 'composer --version'

          // install docker in jnlp container
          sh 'apt-get update'
          sh 'apt-get install apt-transport-https ca-certificates curl gnupg-agent software-properties-common -y'
          sh 'curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -'
          sh 'add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/debian $(lsb_release -cs) stable"'
          sh 'apt-get update'
          sh 'apt-get install docker-ce docker-ce-cli containerd.io -y'
          sh 'docker --version'

          // start docker service
          sh 'usermod -aG docker $(whoami)'
          sh 'newgrp docker'
          sh 'service docker start'
        }
      }
    }

    stage('install') {
      steps {
        container('jnlp'){
          sh 'cp .env.example .env'
          sh 'composer update'
          sh 'composer install --no-interaction'
          sh 'php artisan key:generate'
        }
      }
    }

    stage('tests') {
      steps {
        container('jnlp'){
          sh 'composer tests'
        }
      }
    }

    stage('build') {
      steps {
        container('docker-container'){
          sh 'docker build -t ${image_name}:${image_tag} .'
        }
      }
    }
  }
}



