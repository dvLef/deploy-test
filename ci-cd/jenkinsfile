pipeline {
  agent any

  parameters {
    string(name: 'container_name', defaultValue: 'deploy-test-container', description: 'Container name')
    string(name: 'image_name', defaultValue: 'deploy-test', description: 'Image name')
    string(name: 'image_tag', defaultValue: 'latest', description: 'Image tag')
    string(name: 'container_port', defaultValue: '80', description: 'Container port')
  }

  stages {
    stage('evironment') {
      steps {
        git branch: 'main', url: 'https://github.com/dvLef/deploy-test'
        sh 'apt-get update'
        sh 'apt-get install php curl php-curl php-xml zip unzip php-zip -y'
        sh 'php -v'
        sh 'curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer'
        sh 'composer --version'

        // instalacion de docker para amazon linux 2
        sh 'apt-get install amazon-linux-extras -y'
        sh 'amazon-linux-extras install docker -y'
        sh 'service docker start'
        sh 'usermod -a -G docker ec2-user'
        sh 'chkconfig docker on'
        sh 'docker --version'
      }
    }

    stage('install') {
      steps {
        sh 'cp .env.example .env'
        sh 'composer update'
        sh 'composer install --no-interaction'
        sh 'php artisan key:generate'
      }
    }

    stage('tests') {
      steps {
        sh 'composer tests'
      }
    }

  }
}


